units:
  # layout is based around a chevron shape with sides slopped at 15 degrees
  angle_stagger: 15     # columns stagger at this angle
  key_slope: 0.2679     # column stagger expressed as a ratio (tan(15deg))
  key_stagger: 0.2679u  # columns stagger by a fixed amount based on key unit (u)
  cos_stagger: 0.9659   # cos(15)
  sin_stagger: 0.2588   # sin(15)
  # board margins and padding
  pad_edge: 5     # padding between the edge of the keycap and the edge of the board
  rad_inner: 1    # inside corner radius
  # keycap and switch sizes
  mx_caps: 18     # 18mm x 18mm
  mx_switch: 14   # mx switch footprint is 14mm (as it applies to switch plates)
  rot_size: 24    # rotary encoder knob diameter
  rot_switch: 14  # rotary encoder footprint is 12mm square, so give it 1mm of extra room each side
  # thumb cluster extends this far beyond the centerline of the keys to match the matrix stagger angle
  tu_extents: 74       # how far from thumb-key centerline the case extends vertically
  tu_join_near: 9.2    # distance from the thumb-key centerline where the thumbcluster shape joins the matrix chevron
  rot_offset_x: -7     # horizontal offset from far thumb key where the rotary encoder sits
  rot_offset_y: 30     # distance from the thumb-key centerline where the rotary encoder sits
  # hardware dimensions
  screw_ring: 0.8      # M1.6 screw is 1.6mm in diameter (circle of 0.8mm radius)
  mcu_width: 17.78     # Elite-C footprint is 0.70" in width
  mcu_height: 33.02    # Elite-C footprint is 1.30" in height
  mcu_port: 34.544     # Elite-C with USB port is 1.37" from edge to edge
  mcu_offset_y: 19.304 # Elite-C footprint offset from top edge
  trrs_width: 6.1      # TRRS jack footprint width
  trrs_height: 12.1    # TRRS jack footprint length
  trrs_port: 2         # TRRS jack overhang from edge of footprint
  trrs_offset_x: 0.75  # TRRS footprint offset from top-right corner (not including port overhang)
points:
  key:
    footprints:
      # MX hotswap sockets so switches can be swapped easily
      mx_hotswap:
        type: mx
        params:
          hotswap: true
          reverse: true  # reversable PCB
          keycaps: true
        nets:
          from: =colrow  # colrow is a unique string for each column+row point
          to: =col_net   # col_net is a property set for each column (a column's pin in the MCU)
      # diodes so that simultaneous key presses in the same row or column don't fire the wrong key (n-key rollover)
      diode:
        type: diode
        params:
          tht: false     # surface mount diodes for that tight finish
        nets:
          from: =colrow  # colrow is a unique string for each column+row point
          to: =row_net   # row_net is the property for each row corresponding to the row's pin
        anchor:
          shift: [7, -4]
          rotate: 90
      via_diode_from:
        type: via
        nets:
          net: =colrow
        anchor:
          shift: [7, -1]
      via_diode_to:
        type: via
        nets:
          net: =row_net
        anchor:
          shift: [7, -7]
      # via to connect the front and back column pins, allowing the PCB to be flipped for the right side
      via_col:
        type: via
        nets:
          net: =col_net
        anchor:
          shift: [0, 7]
    # keys are 1U by default, thumbcluser keys are 1.5U and tagged with "15u"
    tags:
      1u: true
  zones:
    matrix:
      rows:
        lower:
          row_net: P15
        home:
          row_net: P14
        upper:
          row_net: P16
        number:
          row_net: P10
          tags:
            numbers: true
      columns:
        outer:
          key:
            col_net: P9
          rows:
            number:
              skip: true
        pinky:
          stagger: key_stagger
          key:
            col_net: P8
        ring:
          stagger: key_stagger
          key:
            col_net: P7
        middle:
          stagger: key_stagger
          key:
            col_net: P6
        index:
          stagger: -key_stagger
          key:
            col_net: P5
        inner:
          stagger: -key_stagger
          key:
            col_net: P4
    thumbcluster:
      anchor:
        ref: matrix_index_lower
        shift: [7, -28.25]
        rotate: -angle_stagger
      columns:
        near:
          key:
            col_net: P6
        home:
          key:
            col_net: P5
        far:
          key:
            col_net: P4
      rows:
        thumb:
          row_net: P18
          tags:
            1u: false
            15u: true    # 1.5U thumb keys
outlines:
  exports:
    _ref_thumb_rect:
      - type: rectangle
        size: [6u, (3.25u + pad_edge)/cos_stagger]
        anchor:
          ref: thumbcluster_far_thumb
          shift: [-5.25u, 0.75u - pad_edge]
    _ref_matrix_rect:
      - type: rectangle
        size: [5u, (3u + 2*pad_edge)/cos_stagger]
        anchor:
          ref: matrix_ring_home
          orient: angle_stagger
          shift: [-2.5u, (-1.5u - pad_edge)/cos_stagger]
    _ref_middle_rect:
      - type: rectangle
        size: [1u, 5u]
        anchor:
          ref: matrix_middle_lower
          shift: [0, -2u]
    _case_outer_radius:
      - type: circle
        radius: pad_edge
        anchor:
          ref: matrix_outer_upper
          shift: [-0.5u, 0.5u]
      - type: circle
        radius: pad_edge
        anchor:
          ref: thumbcluster_far_thumb
          shift: [0.5u, tu_extents]
      - type: circle
        radius: pad_edge
        anchor:
          ref: thumbcluster_far_thumb
          shift: [0.5u, -0.75u]
      - type: circle
        radius: pad_edge
        anchor:
          ref: thumbcluster_near_thumb
          shift: [-0.5u, -0.75u]
      - type: circle
        radius: pad_edge
        anchor:
          ref: matrix_outer_lower
          shift: [-0.5u, -0.75u]
      - type: polygon
        points:
          - ref: matrix_outer_upper
            shift: [-0.5u - pad_edge, 0.5u]
          - ref: matrix_outer_upper
            shift: [-0.5u - pad_edge*sin_stagger, 0.5u + pad_edge*cos_stagger]
          - ref: matrix_middle_upper
            shift: [0, 0.5u + key_stagger/2 + pad_edge]
          - ref: thumbcluster_far_thumb
            shift: [0.5u, tu_extents + pad_edge]
          - ref: thumbcluster_far_thumb
            shift: [0.5u + pad_edge, tu_extents]
          - ref: thumbcluster_far_thumb
            shift: [0.5u + pad_edge, -0.75u]
          - ref: thumbcluster_far_thumb
            shift: [0.5u, -0.75u - pad_edge]
          - ref: thumbcluster_near_thumb
            shift: [-0.5u, -0.75u - pad_edge]
          - ref: thumbcluster_near_thumb
            shift: [-0.5u - pad_edge, -0.75u]
          - ref: thumbcluster_near_thumb
            shift: [-0.5u - pad_edge, tu_join_near - rad_inner]
          - ref: thumbcluster_near_thumb
            shift: [-0.5u - pad_edge - rad_inner, tu_join_near]
          - ref: matrix_middle_lower
            shift: [0, -0.6125u - pad_edge/cos_stagger]
          - ref: matrix_outer_lower
            shift: [-0.5u + (pad_edge*sin_stagger), -0.75u - (pad_edge*cos_stagger)]
          - ref: matrix_outer_lower
            shift: [-0.5u - pad_edge, -0.75u]
      - type: circle
        operation: subtract
        radius: rad_inner
        anchor:
          ref: thumbcluster_near_thumb
          shift: [-0.5u - pad_edge - rad_inner, tu_join_near - rad_inner]
    _case_inner_radius:
      - type: circle
        radius: rad_inner
        anchor:
          ref: matrix_outer_upper
          shift: [-0.5u, 0.5u]
      - type: circle
        radius: rad_inner
        anchor:
          ref: thumbcluster_far_thumb
          shift: [0.5u, tu_extents]
      - type: circle
        radius: rad_inner
        anchor:
          ref: thumbcluster_far_thumb
          shift: [0.5u, -0.75u]
      - type: circle
        radius: rad_inner
        anchor:
          ref: thumbcluster_near_thumb
          shift: [-0.5u, -0.75u]
      - type: circle
        radius: rad_inner
        anchor:
          ref: matrix_outer_lower
          shift: [-0.5u, -0.75u]
      - type: polygon
        points:
          - ref: matrix_outer_upper
            shift: [-0.5u - rad_inner, 0.5u]
          - ref: matrix_outer_upper
            shift: [-0.5u - rad_inner*sin_stagger, 0.5u + rad_inner*cos_stagger]
          - ref: matrix_middle_upper
            shift: [0, 0.5u + key_stagger/2 + rad_inner]
          - ref: thumbcluster_far_thumb
            shift: [0.5u, tu_extents + rad_inner]
          - ref: thumbcluster_far_thumb
            shift: [0.5u + rad_inner, tu_extents]
          - ref: thumbcluster_far_thumb
            shift: [0.5u + rad_inner, -0.75u]
          - ref: thumbcluster_far_thumb
            shift: [0.5u, -0.75u - rad_inner]
          - ref: thumbcluster_near_thumb
            shift: [-0.5u, -0.75u - rad_inner]
          - ref: thumbcluster_near_thumb
            shift: [-0.5u - rad_inner, -0.75u]
          - ref: thumbcluster_near_thumb
            shift: [-0.5u - rad_inner, tu_join_near - rad_inner]
          - ref: thumbcluster_near_thumb
            shift: [-0.5u - pad_edge - rad_inner, tu_join_near + pad_edge - rad_inner]
          - ref: matrix_middle_lower
            shift: [pad_edge*sin_stagger, -12.975]
          - ref: matrix_middle_lower
            shift: [-pad_edge*sin_stagger, -12.975]
          - ref: matrix_outer_lower
            shift: [-0.5u + (rad_inner*sin_stagger), -0.75u - (rad_inner*cos_stagger)]
          - ref: matrix_outer_lower
            shift: [-0.5u - rad_inner, -0.75u]
      - type: circle
        operation: subtract
        radius: pad_edge
        anchor:
          ref: thumbcluster_near_thumb
          shift: [-0.5u - pad_edge - rad_inner, tu_join_near - rad_inner]
      - type: circle
        operation: subtract
        radius: pad_edge
        anchor:
          ref: matrix_middle_lower
          shift: [0, -0.6125u - (pad_edge + rad_inner)/cos_stagger]
    _keys_numbers:
      - type: keys
        operation: add
        side: left
        size: u + 2*rad_inner
        tags: [numbers]
    _case_cover_plate:
      - type: polygon
        points:
          - ref: matrix_inner_upper
            shift: [0.5u + rad_inner, 0.5u + 2*rad_inner]
          - ref: thumbcluster_far_thumb
            shift: [0.5u + 2*rad_inner, (3.725u + 2*rad_inner)/cos_stagger]
          - ref: thumbcluster_far_thumb
            shift: [0.5u + 2*rad_inner, 0.75u + rad_inner]
          - ref: matrix_inner_lower
            shift: [0.5u + rad_inner, -0.5u - 0.5u * key_slope - rad_inner]
    _holes_ring:
      - type: circle
        radius: screw_ring
        anchor:
          ref: matrix_outer_upper
          shift: [0, 0.5u + key_stagger/2 + 0.5*(pad_edge + rad_inner)/cos_stagger]
      - type: circle
        radius: screw_ring
        anchor:
          ref: matrix_inner_upper
          shift: [1u, 0.5u - key_stagger/2 + 0.5*(pad_edge + rad_inner)/cos_stagger]
      - type: circle
        radius: screw_ring
        anchor:
          ref: thumbcluster_far_thumb
          shift: [0, tu_extents + (pad_edge + rad_inner)/2]
      - type: circle
        radius: screw_ring
        anchor:
          ref: thumbcluster_far_thumb
          shift: [0, -0.75u - (pad_edge + rad_inner)/2]
      - type: circle
        radius: screw_ring
        anchor:
          ref: thumbcluster_near_thumb
          shift: [0, -0.75u - (pad_edge + rad_inner)/2]
      - type: circle
        radius: screw_ring
        anchor:
          ref: matrix_ring_lower
          shift: [0, -0.625u - 0.5*cos_stagger*(pad_edge + rad_inner)]
      - type: circle
        radius: screw_ring
        anchor:
          ref: matrix_outer_lower
          shift: [0, -0.625u - 0.5*cos_stagger*(pad_edge + rad_inner)]
    _holes_ring_bot:
      - type: circle
        radius: screw_ring
        anchor:
          ref: matrix_ring_upper
          shift: [0, 0.5u + key_stagger/2 + 0.5*(pad_edge + rad_inner)/cos_stagger]
      - type: circle
        radius: screw_ring
        anchor:
          ref: matrix_index_upper
          shift: [0, 0.5u + key_stagger/2 + 0.5*(pad_edge + rad_inner)/cos_stagger]
    _case_top:
      - type: outline
        name: _case_outer_radius
      - type: outline
        name: _case_inner_radius
        operation: subtract
      - type: outline
        name: _keys_numbers
        operation: subtract
    _case_cover:
      - type: outline
        name: _case_top
      - type: outline
        name: _keys_numbers
        operation: subtract
      - type: outline
        name: _case_cover_plate
        operation: add
    _case_mid:
      - type: outline
        name: _case_outer_radius
      - type: outline
        name: _case_inner_radius
        operation: subtract
    _plate:
      - type: outline
        name: _case_outer_radius
      - type: outline
        name: _keys_numbers
        operation: add
    _plate_outline:
      - type: outline
        name: _plate
        fillet: 2
    _pcb_outline:
      - type: outline
        name: _plate_outline
      - type: outline
        name: _holes_ring
        operation: subtract
    _switches:
      - type: keys
        side: left
        size: mx_switch
        bound: false
    _switches_rotary:
      - type: rectangle
        size: rot_switch
        anchor:
          ref: thumbcluster_far_thumb
          shift: [rot_offset_x - rot_switch/2, rot_offset_y - rot_switch/2]
    _keycaps_matrix:
      - type: keys
        side: left
        size: mx_caps
        bound: false
        tags: [1u]
    _keycaps_thumbcluster:
      - type: keys
        side: left
        size: [mx_caps, 1.5 * mx_caps] # 1.5u keys for thumb cluster
        bound: false
        tags: [15u]
    _keycaps_rotary:
      - type: circle
        radius: rot_size/2
        anchor:
          ref: thumbcluster_far_thumb
          shift: [rot_offset_x, rot_offset_y]
    case_top_ring:
      - type: outline
        name: _case_top
        fillet: 1
    case_top_cover:
      - type: outline
        name: _case_cover
        fillet: 1
      - type: outline
        name: _holes_ring
        operation: subtract
      - type: outline
        name: _keycaps_rotary
        operation: subtract
    case_mid_ring:
      - type: outline
        name: _case_top
        fillet: 1
      - type: outline
        name: _holes_ring
        operation: subtract
    case_bot_ring:
      - type: outline
        name: _case_mid
        fillet: 1
      - type: outline
        name: _holes_ring
        operation: subtract
      - type: outline
        name: _holes_ring_bot
        operation: subtract
    case_bot_plate:
      - type: outline
        name: _case_outer_radius
        fillet: 1
      - type: outline
        name: _holes_ring
        operation: subtract
      - type: outline
        name: _holes_ring_bot
        operation: subtract
    switchplate:
      - type: outline
        name: _plate
        fillet: 1
      - type: outline
        name: _switches
        operation: subtract
        fillet: 0.5
      - type: outline
        name: _switches_rotary
        operation: subtract
      - type: outline
        name: _holes_ring
        operation: subtract
    preview_keycaps:
      - case_top_ring
      - ^_keycaps_matrix
      - ^_keycaps_thumbcluster
      - ^_keycaps_rotary
pcbs:
  chevron-split:
    outlines:
      edge:
        outline: _pcb_outline
        layer: Edge.Cuts
    footprints:
      mcu:
        type: promicro
        params:
          orientation: down
        anchor:
          ref: thumbcluster_far_thumb
          shift: [0.5u - trrs_width - 7.02 - mcu_width/2, tu_extents + pad_edge - mcu_offset_y]
          rotate: -90
      trrs:
        type: trrs
        params:
          reverse: true
          symmetric: true
        nets:
          A: GND
          B: GND
          C: P2
          D: VCC
        anchor:
          ref: thumbcluster_far_thumb
          shift: [0.5u - trrs_offset_x, tu_extents + pad_edge - trrs_port]
      rotary:
        type: rotary
        nets:
          from: rotary
          to: P8
          A: P20
          B: GND
          C: P19
        anchor:
          ref: thumbcluster_far_thumb
          shift: [rot_offset_x, rot_offset_y]
      rotary_diode:
        type: diode
        params:
          tht: false
        nets:
          from: rotary
          to: P18
        anchor:
          ref: thumbcluster_far_thumb
          shift: [rot_offset_x + 0.5u, rot_offset_y]
          rotate: 90
      rotary_diode_via:
        type: via
        nets:
          net: P18
        anchor:
          ref: thumbcluster_far_thumb
          shift: [rot_offset_x + 0.5u, rot_offset_y - 3]
      reset:
        type: button
        anchor:
          ref: thumbcluster_far_thumb
          shift: [0.5u - trrs_width - mcu_width - 13, tu_extents + pad_edge - 9.15]
        params:
          side: B
        nets:
          from: GND
          to: RST